                                    /* Level Order traversal of Binary tree */
#include <bits/stdc++.h>
using namespace std;
struct Node{
    int data;
    struct Node *left, *right;
    
    Node(int x){
        data=x;
        left=NULL;
        right=NULL;
    }
};

void printSpiralOrder(Node *root){
    
    if(root==NULL){
        return;
    }
    
    queue<Node*> q;
    q.push(root);
    while(!q.empty()){
        Node *curr = q.front();
        cout<< (curr->data) <<" ";
        q.pop();
        if(curr->left)
            q.push(curr->left);
        
        if(curr->right)
            q.push(curr->right);
    }
}

int main() {
	// your code goes here
	struct Node *root = new Node(1);
	root->left=new Node(2);
	root->right=new Node(3);
	root->left->left=new Node(4);
	root->left->right=new Node(5);
	root->right->left=new Node(6);
	root->right->right=new Node(7);
	root->left->right->left=new Node(8);
	printSpiralOrder(root);
	return 0;
}
