#include <bits/stdc++.h> 
using namespace std; 

struct Node 
{ 
	int data; 
	struct Node *left, *right;
	
    Node(int x){
        data=x;
        left=NULL;
        right=NULL;
    }
}; 

Node* LCA(Node *root, int n1, int n2) 
{ 
	if (root->data > max(n1, n2))
		return LCA(root->left, n1, n2); 
   
	else if (root->data < min(n1, n2))
		return LCA(root->right, n1, n2); 

	else
        return root; 
} 


int main() 
{ 
	Node *root = new Node(20); 
	root->left = new Node(8); 
	root->right = new Node(22); 
	root->left->left = new Node(4); 
	root->left->right = new Node(12); 
	root->left->right->left = new Node(10); 
	root->left->right->right = new Node(14); 

	int n1 = 10, n2 = 14; 
	Node *t = LCA(root, n1, n2); 
	cout << "LCA of " << n1 << " and " << n2 << " is " << t->data<<endl; 

	n1 = 14, n2 = 8; 
	t = LCA(root, n1, n2); 
	cout<<"LCA of " << n1 << " and " << n2 << " is " << t->data << endl; 

	n1 = 10, n2 = 22; 
	t = LCA(root, n1, n2); 
	cout << "LCA of " << n1 << " and " << n2 << " is " << t->data << endl; 
	return 0; 
} 
